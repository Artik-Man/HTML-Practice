<section id="pseudo"><h2>Псевдоклассы и псевдоэлементы</h2>
  <p>
    Псевдоклассы и псевдоэлементы решают группу задач,связанных с выбором конктерного элемента списка или с изменением
    поведения объекта в связи с возникновением какого-либо события.
    Здесь мы разберём лишь часть из существующих псевдоэлементов и псевдоклассов, а больше вы всегда сможете узнать
    здесь:
    <a href="https://developer.mozilla.org/ru/docs/Learn/CSS/Introduction_to_CSS/Pseudo-classes_and_pseudo-elements"
       target="_blank">
      Псевдоклассы и псевдоэлементы
    </a>
  </p>
  <h3>Псевдоклассы</h3>
  <p>
    Псевдоклассы представляют собой ключевое слово, начинающееся с двоеточия (:), которое добавляют после селектора:
  </p>
  <pre data-lang="css">selector:pseudo-class { ... }</pre>
  <p>Ниже приведён список наиболее популярных псевдоклассов</p>
  <ul>
    <li>
      <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:hover">:hover</a><br/>
      Срабатывает при наведении курсора на элемент
    </li>
    <li>
      <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:visited">:visited</a><br/>
      Позволяет выбрать посещённые ссылки
    </li>
    <li>
      <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:active">:active</a><br/>
      Срабатывает при нажатии на элемент, но может быть применим только к элементам<code>&lt;a&gt;</code> и<code>&lt;button&gt;</code>
    </li>
    <li>
      <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:focus">:focus</a><br/>
      Срабатывает при получении элементом фокуса. Работает только для элементов<code>&lt;a&gt;</code>,<code>&lt;button&gt;</code>,<code>&lt;input&gt;</code>,<code>&lt;textarea&gt;</code>
    </li>
    <li>
      <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:checked">:checked</a><br/>
      Срабатывает для элемента<code>&lt;input type="checkbox"&gt;</code> или<code> &lt;input type="radio"&gt;</code>.
      Позволяет
      применять стили в том случае, если на элементе стоит отметка
    </li>
    <li>
      <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:disabled">:disabled</a><br/>
      Срабатывает, если элемент имеет атрибут<code>disabled</code>, к примеру, элемент
      <code>&lt;input type="..." disabled&gt;</code>или<code>&lt;button disabled&gt;</code>
    </li>
    <li>
      <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:required">:required</a><br/>
      Срабатывает, если элемент имеет атрибут<code>required</code>, всегда для элемента
      <code>&lt;input required&gt;</code>
    </li>
    <li>
      <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:first-child">:first-child</a><br/>
      Позволяет выбрать первый элемент в своем родителе
    </li>
    <li><a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:last-child">:last-child</a><br/>
      Позволяет выбрать последний элемент в своем родителе
    </li>
    <li>
      <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:nth-child">:nth-child</a><br/>
      Позволяет выбирать один или более элементов, основываясь на их позиции среди группы соседних элементов.<br/>
      <b>Примеры:</b><br/>
      <code>ul li:nth-child(2)</code>Выберет второй элемент<br/>
      <code>ul li:nth-child(2n)</code>Выберет каждый второй элемент (через один)<br/>
      <code>ul li:nth-child(3n+1)</code>Выберет 1,4,7,9 ... и так далее, через два элементы.
    </li>
    <li><a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:nth-last-child">:nth-last-child</a><br/>Точно
      так же, но счёт идёт с последнего элемента к первому. К примеру, для выбора предпоследнего элемента списка:<code>ul
        li:nth-last-child(2)</code></li>
    <li><a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:not">:not()</a><br/>"НЕ". Это функция,
      принимающая селектор внутрь скобок. К примеру, нам нужно найти все ссылки, у которых нет
      атрибута<code>target</code>:<br/><code>a:not([target])</code><br/>Ещё пример: требуется найти все статьи, не
      имеющие класса<code>.top</code>:<br/><code>article:not(.top)</code></li>
  </ul>
  <h3>Псевдоэлементы</h3>
  <p>Псевдоэлементов значительно меньше, а отличить их можно по двойному двоеточию (::), которое добавляется к
    селектору.</p>
  <pre data-lang="css">selector::pseudo-element { ... }</pre>
  <p>Браузерами поддерживается и устаревший синтаксис с одинарным двоеточием.</p>
  <p>Псевдоэлементы ведут себя как элементы, то есть, у них есть размеры, они могут быть спозиционированы, их видно.
    Псевдоклассы же мы увидеть ен могли,могли лишь только увидеть их влияние на элементы. Рассмотрим псевдоэлементы
    подробнее:</p>
  <ul>
    <li><a href="https://developer.mozilla.org/ru/docs/Web/CSS/::before" target="_blank">::before</a><br/>Создаёт
      псевдоэлемент, который будет являться первым потомком элемента. Не работает без свойства<code>content:
        '';</code><br/><code>a::before{
        content: '♥';
        }</code>В этом примере, перед каждой ссылкой на сайте будет добавляться сердечко.
    </li>
    <li><a href="https://developer.mozilla.org/ru/docs/Web/CSS/::after" target="_blank">::after</a><br/>Работает точно
      так же, как и ::before, но псевдоэлемент создаётся в самом конце и будет являться последним потомком.
    </li>
  </ul>
  <div class="no-print-break"><p>С остальными псевдоэлементами вы познакомитесь позже, на личной практике. Они
      используются заметно реже. Конечно, ссылки на них я приведу:</p>
    <ul>
      <li><a href="https://developer.mozilla.org/ru/docs/Web/CSS/::first-letter" target="_blank">::first-letter</a></li>
      <li><a href="https://developer.mozilla.org/ru/docs/Web/CSS/::first-line" target="_blank">::first-line</a></li>
      <li><a href="https://developer.mozilla.org/ru/docs/Web/CSS/::selection" target="_blank">::selection</a></li>
      <li><a href="https://developer.mozilla.org/ru/docs/Web/CSS/::backdrop" target="_blank">::backdrop</a></li>
    </ul>
  </div>
</section>
