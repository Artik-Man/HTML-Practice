<section id="column-count">
  <h2>Многоколоночный текст</h2>
  <p>
    Время от времени возникает задача расположить список или текст в две колонки. Годы идут, CSS развивается, поколения
    верстальщиков сменяют поколения,но свои костыли люди как делали, так и делают. Мало кто знает, но в CSS появилось
    свойство<br/>
    <a href="http://htmlbook.ru/css/column-count" target="_blank">column-count</a>, позволяющее задать количество
    колонок для списка или текста. Также есть свойство<br/>
    <a href="http://htmlbook.ru/css/column-width" target="_blank">column-width</a>, которое задаёт минимальную ширину
    для колонки,<br/>
    <a href="http://htmlbook.ru/css/column-rule" target="_blank">column-rule</a>, отрисовывающее линию между колонками
    словно border,<br/>
    <a href="http://htmlbook.ru/css/column-gap" target="_blank">column-gap</a>, задающее расстояние
    между колонками и<br/>
    <a href="http://htmlbook.ru/css/columns" target="_blank">columns</a>, объединяющее в себе
    column-width и column-count.
  </p>
  <p>Разберемся на примерах из жизни. Простой пример: нужно сделать так, чтобы список располагался в две колонки.</p>
  <pre data-lang="html" data-code="col-count-1,col-count-2" hidden="hidden">&lt;ul&gt;
  &lt;li&gt;Lorem&lt;/li&gt;
  &lt;li&gt;ipsum&lt;/li&gt;
  &lt;li&gt;dolor&lt;/li&gt;
  &lt;li&gt;sit&lt;/li&gt;
  &lt;li&gt;amet&lt;/li&gt;
  &lt;li&gt;consectetur&lt;/li&gt;
  &lt;li&gt;adipisicing&lt;/li&gt;
  &lt;li&gt;elit&lt;/li&gt;
&lt;/ul&gt;</pre>
  <div data-run="col-count-1"></div>
  <p>Добавим следующий CSS-код:</p>
  <pre data-lang="css" data-code="col-count-2">ul {
  column-count: 2;
}</pre>
  <p>В результате получим это:</p>
  <div data-run="col-count-2"></div>
  <p>
    Просто, не правда ли? А теперь посмотрим на немного более сложный пример. Итак, наши клиенты - люди с
    планшетами.Наше веб-приложение похоже на газету и листать её нужно слева направо, а не вниз, как остальные сайты.
    Текст должен располагаться в три колонки на экран.
    Общее количество колонок неизвестно, также, как и количество текста.
  </p>
  <p>
    Из задания лишь понятно, что высота приложения должна быть равна высоте экрана пользователя, а за раз на экране
    должно быть отображено три колонки.Для начала, создадим контейнер, который бы занимал весь экран и имел прокрутку
    слева направо.
  </p>
  <pre data-lang="css">.overflow-container {
  height: 100vh;      /* занимает 100% высоты экрана */
  overflow-x: auto;   /* показывает горизонтальный скролл в том случае, если он нужен */
  overflow-y: hidden; /* скрывает вертикальный скролл даже если он нужен */
}</pre>
  <p>
    Теперь определим стили для текста. Мы понимаем, что так как колонки должно быть три, то каждая колонка должна иметь
    ширину 1/3 от ширины страницы.Это означает, что ширина колонки должна быть 100vw/3. Но число 33.333333vw не очень
    красиво выглядит. А свойство column-width задаёт именно
    минимальную ширину колонки. То есть, ширина колонки всегда будет подбираться автоматически, однако, минимальная
    ширина будет такой, какой мы её зададим.
    Давайте зададим ширину колонки в 30vw - это ровное число, которое меньше 33.3333vw.
  </p>
  <pre data-lang="css">.col-3 {
  column-width: 30vw;
}</pre>
  <p>И добавим немного стиля. К примеру, расстояние между колонками и тонкую серую линию между ними.</p>
  <pre data-lang="css">.col-3 {
  column-width: 30vw;
  column-gap: 2vw;
  column-rule: 1px solid #ccc;
}</pre>
  <p>Посмотрим, что получилось:</p>
  <a class="codepen button" data-id="WNejwwa" data-height="500" data-default-tab="result">Запустить пример</a>
</section>
