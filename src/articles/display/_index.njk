<article id="display"><h2>Свойство display</h2><p>Одним из важнейший CSS-свойств является display. Оно позволяет переопределять тип отображения элемента, не изменяя семантику кода.Рассмотрим основные значения этого свойства:</p><ol><li>none &mdash; скрывает элемент;</li><li>block &mdash; определяет элемент как "блочный", что означает, что элемент не обтекается другими объектами, а переносится на новую строку и заполняет её полностью. Следующий элемент будет отрисован под блочным элементом.
Является стандартным значением элементов div, p, ul, article, section и других;</li><li>inline &mdash; определяет элемент как "строчный", что означает, что элемент ведёт себя как текст.Является стандартным значением элементов span, a, s, b и других;</li><li>inline-block &mdash; смесь строчного и блочного. Фактически, являясь блочным, элемент получает возможность обтекаться строчными элементами, как тег img;</li><li>flex &mdash; превращает элемент в flex-контейнер. Это означает, что внутренние элементы выстраиваются так, как мы зададим с помощью свойств<a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/flex">flex,</a><a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/flex-direction">flex-direction,</a><a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/flex-wrap">flex-wrap,</a><a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/align-items">align-items,</a><a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/justify-content">justify-content</a> и других. Более подробно о flex-контейнерах стоит прочитать тут:<a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Flexible_Box_Layout/Выравнивание_элементов_в_Flex_контейнере">Выравнивание элементов в Flex контейнере</a>;</li><li>grid &mdash; превращает элемент в grid-контейнер. Гриды это новая технология построения сеток. При помощи свойств управления сетками, например,<a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns">grid-template-columns</a>, мы можем управлять отображением содержимого внутри грида. Более подробно о гридах можно почитать здесь:<a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout">Основные понятия Grid Layout</a>.</li></ol><section><h3>Задачи</h3><p>Задачи на добавление всего одной строки кода. Смотрите HTML-код, подумайте, какое CSS-свойство спасёт ситуацию.Поиграйтесь со значениями этого свойства. Все необходимые для выполнения задачи знания описаны в этой главе.</p><p>1. Напишите CSS-код, позволяющий скрыть этот элемент</p><a class="codepen button" data-id="gOYPNzd">Посмотреть задание</a><p>2. Не меняя HTML-кода, сделайте так, чтобы каждое предложение начиналось с новой строки</p><a class="codepen button" data-id="JjPGQBN">Посмотреть задание</a><p>3. Сделайте так, чтобы все элементы списка шли в одну строку</p><a class="codepen button" data-id="xxKVKKm">Посмотреть задание</a><p>4. Добавьте одно свойство так, чтобы меню стало широким</p><a class="codepen button" data-id="vYBGBLE" data-height="400">Посмотреть задание</a><p>5. Сделайте так, чтобы счёт шёл слева направо, а не снизу вверх</p><a class="codepen button" data-id="ExYKYWM" data-height="400">Посмотреть задание</a><p>6. Добавьте одну строку так, чтобы получилась таблица</p><a class="codepen button" data-id="yLBOBpq">Посмотреть задание</a></section></article>