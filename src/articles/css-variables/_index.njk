<section id="css-variables">
  <h2>CSS переменные</h2>
  <p>В крупных проектах часто используется ограниченная палитра цветов, составленная дизайнером. В ходе разработки, мы
    используем эту палитру по всему проекту.Проект растёт, количество файлов в нём, соответственно, тоже. И вот,
    наступает он &mdash; РЕДИЗАЙН. Слово, доставляющее боль и страдания любому верстальщику.
    Так уж получилось, что вам повезло и в проекте просто поменялось несколько цветов. Допустим, салатовый стал
    ярко-зелёным, а красный стал томатным.
    Звучит не так уж и сложно. Простенький такой редизайн. И пошли мы по всем CSS-файлам проекта искать изменённые
    цвета. Причём, через какое-то время
    мы ещё и заметили, что в прошлый раз, дизайнер немножко ошибался с цветами и вместо одного кода салатового
    цвета<code>#3bff00</code>, он использовал множество вариаций, незначительно отличающихся друг от друга. К
    примеру,<code>#3bff01</code>. Как мы понимаем, простым поиском и заменой нам уже не обойтись. Теперь придётся искать
    на всех страницах вашего сайта салатовые элементы.
    Уже представляете, сколько времени у вас на это уйдёт? А ведь нам еще красный на томатный менять.
  </p>
  <p>В борьбу с такими вот проблемами включились
    <a target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/Using_CSS_custom_properties">
      CSS переменные (CSS custom properties) (пользовательские свойства CSS)
    </a>.
    Мы можем изначально задать переменную для салатового цвета и использовать только её. А если мы при разработке
    увидим, что есть два почти одинаковых салатовых цвета, то можем подойти к дизайнеру и спросить, какой из них
    правильный. Дизайнеры тоже люди и тоже ошибаются. Это надо учитывать.
    Итак, зададим два цвета: салатовый и томатный:
  </p>
  <pre data-lang="css">:root {
  --green-light: #3bff00;
  --tomato: #ff6347;
}</pre>
  <p>Как вы видете, CSS переменные задаются в псевдо-классе<code>:root</code></p>
  <p>Теперь будем использовать эти переменные в CSS:</p>
  <pre data-lang="css">menu {
  background-color: var(--green-light);
  border: 1px solid var(--tomato);
}</pre>
  <p>К следующему редизайну, когда<code>#3bff00</code>поменяется на<code>#00ad68</code>, мы лишь изменим код цвета
    в<code>:root</code>, и весь проект перекрасится. Одна секунда вместо часов страданий.</p>
  <p>Рекомендую называть переменные не так, как в примере. Наиболее правильными будут названия, исходя из того, где
    используется цвет или вообще какие-то абстрактные названия. Например<code>--accent, --primary, --frame-shadow</code>,
    ...</p>
  <section><h3>Улучшение адаптивности</h3>
    <p>В CSS переменные можно задавать не только цвета, но и числа. А ещё мы можем изменять переменные, в зависимости от
      того,</p>каким устройством пользуется посетитель нашего сайта.
    <pre data-lang="css">:root {
  --font-large: 20px;
}

h3 {
  font-size: var(--font-large);
}

@media(min-width: 700px) {
  :root {
   --font-large: 32px;
  }
}
</pre>
    <p>
      Так, если ширина экрана пользователя больше 700 пикселей, все свойства, использующие переменную
      <code>--font-large</code>, увеличатся.
    </p>
    <p>Кроме того, к CSS переменным можно получить доступ из JavaScript,
      <a target="_blank" href="https://css-tricks.com/updating-a-css-variable-with-javascript/">
        но это уже совсем другая история
      </a>
    </p>
  </section>
</section>
