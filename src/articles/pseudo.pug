article#pseudo
  .container
    h2 Псевдоклассы и псевдоэлементы
    p Псевдоклассы и псевдоэлементы решают группу задач, 
      | связанных с выбором конктерного элемента списка или с изменением поведения объекта в связи с возникновением какого-либо события.
      | Здесь мы разберём лишь часть из существующих псевдоэлементов и псевдоклассов, а больше вы всегда сможете узнать здесь: 
      a(href="https://developer.mozilla.org/ru/docs/Learn/CSS/Introduction_to_CSS/Pseudo-classes_and_pseudo-elements" target="_blank") Псевдоклассы и псевдоэлементы
    h3 Псевдоклассы
    p Псевдоклассы представляют собой ключевое слово, начинающееся с двоеточия (:), которое добавляют после селектора: 
    pre(data-lang="css") selector:pseudo-class { ... }
    p Ниже приведён список наиболее популярных псевдоклассов
    ul
      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:hover") :hover
        br
        | Срабатывает при наведении курсора на элемент

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:visited") :visited
        br
        | Позволяет выбрать посещённые ссылки 

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:active") :active
        br
        | Срабатывает при нажатии на элемент, но может быть применим только к элементам 
        code &lt;a&gt;
        |  и
        code &lt;button&gt; 

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:focus") :focus
        br
        | Срабатывает при получении элементом фокуса. Работает только для элементов 
        code &lt;a&gt;
        | ,
        code &lt;button&gt;
        | ,
        code &lt;input&gt;
        | ,
        code &lt;textarea&gt;

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:checked") :checked
        br
        | Срабатывает для элемента 
        code &lt;input type="checkbox"&gt; 
        |   или
        code  &lt;input type="radio"&gt;
        | . Позволяет применять стили в том случае, если на элементе стоит отметка  

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:disabled") :disabled
        br
        | Срабатывает, если элемент имеет атрибут 
        code disabled
        | , к примеру, элемент
        code &lt;input type="..." disabled&gt; 
        | или 
        code &lt;button disabled&gt; 

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:required") :required
        br
        | Срабатывает, если элемент имеет атрибут  
        code required
        | , всегда для элемента
        code &lt;input required&gt;

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:first-child") :first-child
        br
        | Позволяет выбрать первый элемент в своем родителе

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:last-child") :last-child
        br
        | Позволяет выбрать последний элемент в своем родителе

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:nth-child") :nth-child
        br
        | Позволяет выбирать один или более элементов, основываясь на их позиции среди группы соседних элементов. 
        br
        b Примеры:
        br
        code ul li:nth-child(2)
        | Выберет второй элемент
        br
        code ul li:nth-child(2n)
        | Выберет каждый второй элемент (через один)
        br
        code ul li:nth-child(3n+1)
        | Выберет 1,4,7,9 ... и так далее, через два элементы. 
      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:nth-last-child") :nth-last-child
        br
        | Точно так же, но счёт идёт с последнего элемента к первому. К примеру, для выбора предпоследнего элемента списка:
        code ul li:nth-last-child(2)

      li
        a(target="_blank" href="https://developer.mozilla.org/ru/docs/Web/CSS/:not") :not()
        br
        | "НЕ". Это функция, принимающая селектор внутрь скобок. К примеру, нам нужно найти все ссылки, у которых нет атрибута 
        code target
        | :
        br
        code a:not([target])
        br
        | Ещё пример: требуется найти все статьи, не имеющие класса 
        code .top
        | :
        br
        code article:not(.top)


    h3 Псевдоэлементы
    p Псевдоэлементов значительно меньше, а отличить их можно по двойному двоеточию (::), которое добавляется к селектору. 
    pre(data-lang="css") selector::pseudo-element { ... }
    p Браузерами поддерживается и устаревший синтаксис с одинарным двоеточием. 
    p Псевдоэлементы ведут себя как элементы, то есть, у них есть размеры, они могут быть спозиционированы, их видно. Псевдоклассы же мы увидеть ен могли, 
      | могли лишь только увидеть их влияние на элементы. Рассмотрим псевдоэлементы подробнее:
    ul
      li
        a(href="https://developer.mozilla.org/ru/docs/Web/CSS/::before" target="_blank" ) ::before
        br
        | Создаёт псевдоэлемент, который будет являться первым потомком элемента. Не работает без свойства 
        code content: '';
        br
        code
          | a::before{
          |   content: '♥';
          | }
        | В этом примере, перед каждой ссылкой на сайте будет добавляться сердечко. 

      li
        a(href="https://developer.mozilla.org/ru/docs/Web/CSS/::after" target="_blank" ) ::after
        br
        | Работает точно так же, как и ::before, но псевдоэлемент создаётся в самом конце и будет являться последним потомком.  
    .no-print-break
      p С остальными псевдоэлементами вы познакомитесь позже, на личной практике. Они используются заметно реже. Конечно, ссылки на них я приведу:

      ul
        li
          a(href="https://developer.mozilla.org/ru/docs/Web/CSS/::first-letter" target="_blank" ) ::first-letter
        li
          a(href="https://developer.mozilla.org/ru/docs/Web/CSS/::first-line" target="_blank" ) ::first-line
        li
          a(href="https://developer.mozilla.org/ru/docs/Web/CSS/::selection" target="_blank" ) ::selection
        li
          a(href="https://developer.mozilla.org/ru/docs/Web/CSS/::backdrop" target="_blank" ) ::backdrop 
